---
title: "Tech Memo Figures"
format: html
editor: visual
---

# Tech Memo Figures

This Quarto document can be used to make the figures NCRMP tech memos

#### Load Packages

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(cowplot)
library(grid)
library(patchwork)
library(ggthemes)
library(extrafont)
library(grid)
library(ggthemes)
library(extrafont)
library(shinydashboard)
library(shiny)
library(plotly)
library(tidyverse)
#library(ncrmp.benthics.analysis)
library(ggplot2)
library(cowplot)
library(gridExtra)
library(egg)
library(leaflet)
library(leaflet.extras)
library(mgcv)

#Julia
function_files <- list.files("R", pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)
```

#### Pick Region and Year

```{r}
select_region <- "SEFCRI"
select_year <- 2022
project <- "NCRMP"
```

#### Get Species

```{r}
species_list <- switch(select_region,
                    "SEFCRI" = c("Stephanocoenia intersepta", "Siderastrea siderea", "Orbicella faveolata", "Siderastrea radians", "Meandrina meandrites", "Pseudodiploria strigosa", "Porites divaricata", "Solenastrea hyades", "Agaricia lamarcki", "Montastraea cavernosa", "Agaricia agaricites", "Porites astreoides", "Oculina diffusa", "Colpophyllia natans", "Solenastrea bournoni", "Dichocoenia stokesii", "Porites porites", "Pseudodiploria clivosa", "Acropora cervicornis", "Agaricia fragilis", "Madracis auretenra", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Orbicella franksi", "Favia fragum", "Madracis decactis", "Porites furcata", "Mycetophyllia aliciae"),
                    
                    "FLK" = c("Agaricia agaricites", "Siderastrea radians", "Porites divaricata", "Porites porites", "Helioceris cucullata", "Siderastrea siderea", "Agaricia humilis", "Porites furcata", "Eusmilia fastigiata", "Solenastrea bournoni", "Stephanocoenia intersepta", "Porites astreoides", "Agaricia lamarcki", "Orbicella franksi", "Montastraea cavernosa", "Diploria labyrinthiformis", "Agaricia fragilis", "Manicina areolata", "Orbicella faveolata", "Scolymia cubensis", "Pseudodiploria strigosa", "Porites branneri", "Dichocoenia stokesii", "Solenastrea hyades", "Orbicella annularis", "Colpophyllia natans", "Meandrina meandrites", "Oculina spp", "Madracis auretenra", "Madracis decactis", "Mycetophyllia aliciae", "Pseudodiploria clivosa", "Acropora cervicornis"),
                    
                    "Tortugas" = c("Agaricia agaricites", "Siderastrea siderea", "Orbicella faveolata", "Orbicella franksi", "Montastraea cavernosa", "Porites divaricata", "Porites porites", "Agaricia fragilis", "Porites furcata", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Mycetophyllia aliciae", "Siderastrea radians", "Stephanocoenia intersepta", "Agaricia humilis", "Eusmilia fastigiata", "Agaricia lamarcki", "Diploria labyrinthiformis", "Porites astreoides", "Dichocoenia stokesii", "Acropora cervicornis", "Colpophyllia natans", "Solenastrea bournoni", "Madracis decactis", "Meandrina meandrites", "Helioceris cucullata", "Orbicella annularis"),
                    
                    "FGB" = c("Agaricia agaricites", "Agaricia fragilis", "Agaricia humilis", "Colpophyllia natans", "Helioceris cucullata", "Madracis auretenra", "Madracis decactis", "Meandrina meandrites", "Montastraea cavernosa", "Mussa angulosa", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Pseudodiploria strigosa", "Scolymia cubensis", "Siderastrea siderea", "Stephanocoenia intersepta", "Tubastraea coccinea"),
                    
                    "PRICO" = c("Acropora cervicornis", "Acropora palmata", "Agaricia agaricites", "Agaricia fragilis", "Agaricia grahamae", "Agaricia humilis", "Agaricia lamarcki", "Agaricia tenuifolia", "Colpophyllia natans", "Dendrogyra cylindrus", "Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Favia fragum", "Helioceris cucullata", "Madracis auretenra", "Madracis decactis", "Manicina areolata", "Meandrina danae", "Meandrina jacksoni", "Meandrina meandrites", "Montastraea cavernosa", "Mycetophyllia aliciae", "Mycetophyllia ferox", "Oculina diffusa", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Porites branneri", "Porites divaricata", "Porites furcata", "Porites porites", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Scolymia cubensis", "Siderastrea radians", "Siderastrea siderea", "Solenastrea bournoni", "Stephanocoenia intersepta"),
                    
                    "STTSTJ" = c("Acropora cervicornis", "Acropora palmata", "Agaricia agaricites", "Agaricia fragilis", "Agaricia grahamae", "Agaricia humilis", "Agaricia lamarcki", "Agaricia tenuifolia", "Colpophyllia natans", "Dendrogyra cylindrus", "Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Favia fragum", "Helioceris cucullata", "Isophyllia sinuosa", "Madracis auretenra", "Madracis carmabi", "Madracis decactis", "Madracis formosa", "Manicina areolata", "Meandrina meandrites", "Montastraea cavernosa", "Mycetophyllia aliciae", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Porites colonensis", "Porites divaricata", "Porites furcata", "Porites porites", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Siderastrea radians", "Siderastrea siderea", "Solenastrea bournoni", "Stephanocoenia intersepta"),
                    
                    "STX" = c("Acropora palmata", "Agaricia agaricites", "Agaricia fragilis", "Agaricia grahamae", "Agaricia humilis", "Agaricia lamarcki", "Agaricia tenuifolia", "Colpophyllia natans", "Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Favia fragum", "Helioceris cucullata", "Isophyllastrea rigida", "Isophyllia sinuosa", "Madracis auretenra", "Madracis decactis", "Madracis formosa", "Manicina areolata", "Meandrina meandrites", "Montastraea cavernosa", "Mycetophyllia aliciae", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Porites branneri", "Porites colonensis", "Porites divaricata", "Porites furcata", "Porites porites", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Siderastrea radians", "Siderastrea siderea", "Solenastrea bournoni", "Stephanocoenia intersepta")
  )
    
```

#### Get the Full Name of the Region

```{r}
full_name <- function(region) {
  
  name <- case_when(
  region == "SEFCRI" ~ "Southeast Florida",
  region == "FLK" ~ "Florida Keys",
  region == "Tortugas" ~ "Dry Tortugas",
  region == "STX" ~"St Croix",
  region == "STTSTJ" ~"St Thomas St Johns",
  region == "PRICO" ~"Puerto Rico",
  region == "FGB" ~"Flower Gardens",
  
)
  return(name)
}
```

## Figure 1: Coral and Macroalgae Cover

```{r}

#get the dataset 
data <- switch(select_region,
                    "SEFCRI" = NCRMP_SEFCRI_2014_22_cover_region,
                    "FLK" = NCRMP_FLK_2014_22_cover_region,
                    "Tort" = NCRMP_Tort_2014_22_cover_region,
                    "FGB" = NCRMP_FGBNMS_2013_24_cover_region,
                    "PRICO" = NCRMP_PRICO_2014_23_cover_region,
                    "STTSTJ" = NCRMP_STTSTJ_2013_23_cover_region,
                    "STX" = NCRMP_STX_2015_23_cover_region)

#pick which categories to compare (Hard Corals and Macroalgae)
group_names = c("HARD CORALS", "MACROALGAE")
```

#### Use the GAM function to check model assumptions and summary

```{r}
print("GAM test results: Hard Coral")
GAM_function(data, response ="avCvr", group_var = "cover_group", group_names = "HARD CORALS", kvalue = 3)
```

```{r}
print("GAM test results: Macroalgae")
GAM_function(data, response ="avCvr", group_var = "cover_group", group_names = "MACROALGAE", kvalue = 3)
```

#### Plot Option 1: Combined Macroalgae + Hard Coral

```{r}

#first, filter the data for the specific cover years
if ("cover_group" %in% colnames(data)) {
  data <- data %>%
    filter(cover_group %in% group_names) %>%
    mutate(
      avCvr = as.numeric(avCvr),
      SE = as.numeric(SE)
    )
}

GAM_plot <- data %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  ggplot(aes(x = YEAR, y = avCvr, group = cover_group, color = cover_group)) +
  geom_point(size = 2) +
  geom_line(size = 1) +
  geom_errorbar(aes(ymin = avCvr - SE, ymax = avCvr + SE), width = 0.1) +
  geom_smooth(method = "gam", formula = y ~ s(x, k = 3), se = TRUE, size = 2, show.legend = FALSE) +
  scale_color_manual(
    values = c("HARD CORALS" = "#FF7F50", "MACROALGAE" = "#26BA41"),
    labels = c("Coral", "Macroalgae")
  ) +
  theme_Publication() +
  #call the full name function to get the title
  ggtitle(full_name(select_region)) +
  guides(linetype = guide_legend(override.aes = list(size = 2, linetype = c("solid", "dotted")))) +
  labs(x = "Year", y = "Cover (%)", color = "")

ggsave("Coral_Macroalgae_Combined.png", plot = GAM_plot, width = 15, height = 8, dpi = 300)

GAM_plot

```

#### Option 2: Coral and Macroalgae are Separate Plots, but faceted

```{r}
if ("cover_group" %in% colnames(data)) {
  data <- data %>%
    filter(cover_group %in% group_names) %>%
    mutate(
      avCvr = as.numeric(avCvr),
      SE = as.numeric(SE)
    )
}
GAM_plot <- data %>%
    mutate(YEAR = as.factor(YEAR)) %>%
    ggplot(aes(x = YEAR, y = avCvr, group = cover_group, color = cover_group)) +
      geom_point(size = 2) +
      geom_line(size = 1) +
      geom_errorbar(aes(ymin = avCvr - SE, ymax = avCvr + SE), width = 0.1) +
      geom_smooth(method = "gam", formula = y ~ s(x, k = 3), se = TRUE, size = 2, show.legend = FALSE) +
      facet_wrap(~cover_group, scales = "free") +
      scale_color_manual(values = c('#FF7F50', '#26BA41'), labels = c('Coral', 'Macroalgae')) +
      theme_Publication() +
      guides(linetype = guide_legend(override.aes = list(size = 2, linetype = c("solid", "dotted")))) +
      ggtitle(full_name(select_region)) +
      labs(x = "Year", y = "Cover (%)", color = NULL)  

ggsave("Coral_Macroalgae_Seperate.png", plot = GAM_plot, width = 15, height = 8, dpi = 300)

print(GAM_plot)

```

## Figure 2: Overall Density w/GAM

#### Get Data and Check Model

```{r}
#Get density Data
density_data <- switch(
  select_region,
  "SEFCRI" = NCRMP_DRM_SEFCRI_2014_22_density_region %>% 
    filter(!YEAR %in% c(2015, 2017, 2019, 2021, 2023)),
  "FLK" = NCRMP_DRM_FLK_2014_22_density_region %>% 
    filter(!YEAR %in% c(2015, 2017, 2019, 2021, 2023)),
  "Tort" = NCRMP_Tort_2014_22_density_region %>% 
    filter(!YEAR %in% c(2015, 2017, 2019, 2021, 2023)),
  "FGB" = NCRMP_FGBNMS_2013_24_density_region,
  "PRICO" = NCRMP_PRICO_2014_23_density_region,
  "STTSTJ" = NCRMP_STTSTJ_2013_23_density_region,
  "STX" = NCRMP_STX_2015_23_density_region
)

#Run GAM, check assumptions, check model
GAM_function(density_data, response = "avDen")

```

#### Make Plot

```{r}
#make year a factor
density_data <- density_data %>% mutate(YEAR = as.factor(YEAR))

#Make plot
plt <- ggplot(density_data, aes(x = YEAR, y = avDen)) +
  geom_point(size = 2) +
  geom_line(aes(group = 1), size = 1) +  # Ensure line connects points correctly
  geom_errorbar(aes(ymin = avDen - SE, ymax = avDen + SE), width = 0.1) +
  geom_smooth(
    aes(x = as.numeric(YEAR)), method = "gam", formula = y ~ s(x, k = 3),
    se = TRUE, size = 2
  ) +
  theme_Publication() +
  ggtitle(full_name(select_region)) +
  labs(x = "Year", y = "Density (col/m²)")  # Corrected superscript notation

ggsave("overall_density.png", plot = GAM_plot, width = 15, height = 8, dpi = 300)

print(plt)
```

## Figure 3: CV and Occurrence

```{r}

cv_plot <- NCRMP_DRM_colony_density_CV_and_occurrence(region = select_region, project = project, ptitle = full_name(select_region), year = select_year)
 
ggsave(paste("FGB", ".plot.cv_occ", ".jpeg", sep=""),
       path = "./figs",
       width = 12,
       height = 10,
       dpi = 300)

```

## Figure 4: Coral Demographic Plots

#### Plot Coral Demo Function

```{r}
plot_coral_demographics <- function(region, selected_year, weightedmeans, om_spp, s_spp, rm_spp, species_list) {

  selected_year <- as.double(selected_year)

  a <- weightedmeans %>%
    dplyr::select(REGION, YEAR, SPECIES_CD, avDen, CV, SE) %>%
    dplyr::rename("SE_avDen" = SE)


  b <- om_spp %>%
    dplyr::mutate(SPECIES_CD = SPECIES_NAME) %>%
    dplyr::select(REGION, YEAR, SPECIES_CD, avMort, SE) %>%
    dplyr::rename("avMortOld" = avMort,
                  "SE_avMortOld" = SE)

  c <- s_spp %>%
    dplyr::mutate(SPECIES_CD = SPECIES_NAME) %>%
    dplyr::select(REGION, YEAR, SPECIES_CD, avMaxdiam, SE_maxdiam)


  d <- rm_spp %>%
    dplyr::mutate(SPECIES_CD = SPECIES_NAME) %>%
    dplyr::select(REGION, YEAR, SPECIES_CD, avMort, SE) %>%
    dplyr::rename("avMortRec" = avMort,
                  "SE_avMortRec" = SE)

  combined_data <- a %>%
    dplyr::left_join(., b) %>%
    dplyr::left_join(., c) %>%
    dplyr::left_join(., d) %>%
    arrange(desc(avDen)) %>%
    dplyr::filter(CV < 1) %>%
    mutate(REGION = region)


  combined_data <- combined_data %>%
    dplyr::filter(SPECIES_CD %in% species_list & YEAR == selected_year)

  spp_levels <- combined_data %>%
    dplyr::arrange(avDen)

  spp_levels <- spp_levels$SPECIES_CD

  combined_data <- combined_data %>%
    dplyr::mutate(SPECIES_CD = factor(SPECIES_CD, levels = spp_levels))%>%
    mutate(
      FontFace = ifelse(
        SPECIES_CD %in% c("Acropora cervicornis", "Acropora palmata", "Dendrogyra cylindrus",
                          "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi",
                          "Mycetophyllia ferox"), "bold.italic", "italic")
    )


  dens_plot <- ggplot(data = combined_data, aes(x = avDen, y = SPECIES_CD)) +
    geom_point(stat = "identity", size = 3.75) +
    geom_errorbar(aes(xmin = avDen - SE_avDen, xmax = avDen + SE_avDen, y = SPECIES_CD), width = 0, color = "black") +
    labs(x = expression(Density ~ (corals/m^{2})), y = "") +
    theme_light() +
    theme_Publication(base_size = 20) +
    theme(axis.text.y = element_text(face = combined_data$FontFace))

  om_plot <- ggplot(data = combined_data, aes(x = avMortOld, y = SPECIES_CD)) +
    geom_point(stat = "identity", size = 3.75) +
    geom_errorbar(aes(xmin = avMortOld - SE_avMortOld, xmax = avMortOld + SE_avMortOld, y = SPECIES_CD), width = 0, color = "black") +
    labs(x = expression(Old ~ mortality ~ ("%")), y = "") +
    theme_light() +
    theme_Publication(base_size = 20) +
    theme(axis.text.y = element_blank(), axis.title.y = element_blank())

  rm_plot <- ggplot(data = combined_data, aes(x = avMortRec, y = SPECIES_CD)) +
    geom_point(stat = "identity", size = 3.75) +
    geom_errorbar(aes(xmin = avMortRec - SE_avMortRec, xmax = avMortRec + SE_avMortRec, y = SPECIES_CD), width = 0, color = "black") +
    labs(x = expression(Recent ~ mortality ~ ("%")), y = "") +
    theme_light() +
    theme_Publication(base_size = 20) +
    theme(axis.text.y = element_blank(), axis.title.y = element_blank())

  size_plot <- ggplot(data = combined_data, aes(x = avMaxdiam, y = SPECIES_CD)) +
    geom_point(stat = "identity", size = 3.75) +
    geom_errorbar(aes(xmin = avMaxdiam - SE_maxdiam, xmax = avMaxdiam + SE_maxdiam, y = SPECIES_CD), width = 0, color = "black") +
    labs(x = expression(Maximum ~ diameter ~ (cm)), y = "") +
    theme_light() +
    theme_Publication(base_size = 20) +
    theme(axis.text.y = element_blank(), axis.title.y = element_blank())



  combined_plot <- egg::ggarrange(dens_plot, om_plot, rm_plot, size_plot, ncol = 4)


  return(combined_plot)

}


```

#### Get Data and Make Plot

```{r}
coral_demo <- function(region, year, species_list, project) {
  
  weighted_means <- switch(region,
                    "SEFCRI" = NCRMP_DRM_SEFCRI_Occ_Den_CV,
                    "FLK" =NCRMP_DRM_FLK_Occ_Den_CV,
                    "Tort" = NCRMP_Tort_Occ_Den_CV,
                    "FGB" = NCRMP_FGBNMS_Occ_Den_CV,
                    "PRICO" = NCRMP_PRICO_Occ_Den_CV,
                    "STTSTJ" = NCRMP_STTSTJ_Occ_Den_CV,
                    "STX" = NCRMP_STX_Occ_Den_CV)

  
  old_mort <- NCRMP_DRM_calculate_mortality(region = region, project = project)

  old_mort_spp <- old_mort$Domain_est_old_mort_species

  rec_mort_spp <- old_mort$Domain_est_rec_mort_species

  mean_col_size <- NCRMP_DRM_calculate_mean_colony_size(region = region, project = project)

  size_spp <- mean_col_size$Domain_est_species

  plot <- plot_coral_demographics(region, year, weighted_means, old_mort_spp, size_spp, rec_mort_spp, species_list) 

  ggsave("demo_plot.png", plot = plot, width = 15, height = 8, dpi = 300)
}



coral_demo(region = select_region, year = select_year, species_list = species_list, project = project)
```

## Figure 5: Bleaching and Disease

```{r}

new_bleaching_disease <- function(region, species_list) {
  
  dataset <- switch(region,
    "SEFCRI" = SEFCRI_2022_coral_demographics,
    "FLK" = FLK_2022_coral_demographics,
    "Tort" = Tort_2022_coral_demographics,
    "FGB" = FGBNMS_2024_coral_demographics,
    "PRICO" = USVI_2023_coral_demographics,
    "STTSTJ" = USVI_2023_coral_demographics,
    "STX" = USVI_2023_coral_demographics
  )
  
  
  # Process the dataset
  summary <- dataset %>%
 mutate(
    SPECIES_NAME = ifelse(SPECIES_NAME == "Orbicella annularis species complex", "Orbicella annularis", SPECIES_NAME),
    SPECIES_CD = ifelse(SPECIES_NAME == "Orbicella annularis", "ORB ANNU", SPECIES_CD)
  ) %>%
  filter(!grepl("spp", SPECIES_NAME, ignore.case = TRUE)) %>% 
  filter(N != 0, JUV != 1) %>%
  group_by(SPECIES_NAME) %>%
  summarise(
    total_colonies = sum(N, na.rm = TRUE),
    n_no_bleaching = sum(BLEACH_CONDITION == "N", na.rm = TRUE),
    n_partial_bleaching = sum(BLEACH_CONDITION == "PB", na.rm = TRUE),
    n_paling = sum(BLEACH_CONDITION == "P", na.rm = TRUE),
    n_total_bleaching = sum(BLEACH_CONDITION == "T", na.rm = TRUE),
    total_bleaching_conditions = n_partial_bleaching + n_paling + n_total_bleaching,
    n_present_disease = sum(DISEASE == "P", na.rm = TRUE),
    n_fast_disease = sum(DISEASE == "F", na.rm = TRUE),
    n_slow_disease = sum(DISEASE == "S", na.rm = TRUE),
    total_disease_conditions = n_fast_disease + n_slow_disease,
    .groups = 'drop'
  ) %>%
  mutate(
    prevalence_no_bleaching = 100 *(n_no_bleaching / total_colonies),
    prevalence_partial_bleaching = 100 *(n_partial_bleaching / total_colonies),
    prevalence_paling = 100* (n_paling / total_colonies),
    prevalence_total_bleaching = 100 * (n_total_bleaching / total_colonies),
    prevalence_all_bleaching_conditions = 100 * (total_bleaching_conditions / total_colonies),
    prevalence_present_disease =100 * (n_present_disease / total_colonies),
    prevalence_fast_disease = 100 * (n_fast_disease / total_colonies),
    prevalence_slow_disease = 100 * (n_slow_disease / total_colonies),
    prevalence_all_disease = 100 * (total_disease_conditions / total_colonies),
  ) %>%
 filter(!( total_bleaching_conditions == 0 & total_disease_conditions == 0)) %>%
  mutate(FontFace = ifelse(SPECIES_NAME %in% c("Acropora cervicornis", "Acropora palmata", "Dendrogyra cylindrus", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Mycetophyllia ferox"), "bold.italic", "italic"),
         #combined_label = paste(SPECIES_NAME, " ", "(", total_colonies, ")", sep = " ")  # Add space before parentheses only
         combined_label = paste(SPECIES_NAME, " ", "(", total_colonies, ")", sep = "")  # No space before parentheses
  )
 
  
  
  # Create the middle plot
g.mid <- ggplot(summary, aes(x = 1, y = reorder(SPECIES_NAME, prevalence_all_bleaching_conditions))) +
  geom_text(aes(label = combined_label, fontface = FontFace), size = 5, hjust = 0.5) +  # Use combined_label
  geom_segment(aes(x = 0.9, xend = 0.92, yend = SPECIES_NAME)) +
  geom_segment(aes(x = 1.08, xend = 1.1, yend = SPECIES_NAME)) +
  ylab(NULL) +
  scale_x_continuous(expand = expansion(mult = c(0, 0)), limits = c(0.9, 1.1)) +
  theme(axis.title = element_blank(),
        panel.grid = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        panel.background = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.margin = unit(c(0, 0, 0, 0), "mm"))
  
  # Long format data for bleaching
ble_long <- summary %>%
  pivot_longer(
    cols = starts_with("prevalence_"),  # Adjust if needed to include only relevant columns
    names_to = "bleaching_condition",
    values_to = "prevalence"
  ) %>%
  filter(bleaching_condition %in% c("prevalence_partial_bleaching", 
                                     "prevalence_paling", 
                                     "prevalence_total_bleaching"))%>%
  dplyr::select(SPECIES_NAME, bleaching_condition, prevalence)  # Keep only the desired columns


# Set the order of the bleaching_condition
ble_long$bleaching_condition <- factor(ble_long$bleaching_condition,
                                               levels =c("prevalence_total_bleaching",
                                                      "prevalence_partial_bleaching",
                                                          "prevalence_paling"))
  
  
  # Create bleaching plot
bleach_plot <-  ggplot(ble_long, aes(x = reorder(SPECIES_NAME, prevalence), y = prevalence, fill = bleaching_condition)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip for horizontal bars
  labs(title = "Bleaching Prevalence (%)",  # Add title here
       y = "Prevalence") +  # Remove fill title here
  scale_fill_manual(values = c("prevalence_total_bleaching" = "#c5deda",
                                "prevalence_partial_bleaching" = "#FF9B71",
                                "prevalence_paling" = "#a17c9b"),
                    breaks = c("prevalence_paling", "prevalence_partial_bleaching", "prevalence_total_bleaching"),
                    labels = c("Paling", "Partial", "Total"),
                    name = NULL) +  # Set name to NULL to remove legend title
  scale_y_continuous(expand = expansion(mult = c(0, 0)), limits = c(0, max(ble_long$prevalence) * 1.25)) +  # No space at the bottom
  theme_Publication(base_size = 16) +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_blank(),  # Use element_markdown for rich text
        legend.position = "bottom",
        axis.ticks.y = element_blank(),  # Remove ticks on y-axis
        axis.title.y = element_blank(),  # Remove title for y-axis
        plot.title = element_text(hjust = 0.5))  # Center the title
  

species_order <- summary %>%
  arrange(prevalence_all_bleaching_conditions) %>%
  pull(SPECIES_NAME)
  
dis_long <- summary %>%
  pivot_longer(
    cols = starts_with("prevalence_"),  # Adjust if needed to include only relevant columns
    names_to = "disease_condition",
    values_to = "prevalence"
  ) %>%
  filter(disease_condition %in% c("prevalence_present_disease",
                                      "prevalence_fast_disease", 
                                     "prevalence_slow_disease"))%>%
  dplyr::select(SPECIES_NAME, disease_condition, prevalence)  # Keep only the desired columns

# Order SPECIES_NAME based on the previous order
dis_long$SPECIES_NAME <- factor(dis_long$SPECIES_NAME, levels = species_order)

# Set the order for disease_condition
dis_long$disease_condition <- factor(dis_long$disease_condition, 
                                             levels = c("prevalence_fast_disease",
                                                        "prevalence_slow_disease",
                                                      "prevalence_present_disease"))
  
  # Create disease plot
dis_plot <-  ggplot(dis_long, aes(x = SPECIES_NAME, y = prevalence, fill = disease_condition)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip for horizontal bars
  labs(title = "Disease Prevalence (%)",  # Add title here
       y = "Prevalence") +  # Remove fill title here
  scale_fill_manual(values = c("prevalence_present_disease" = "#e3c869",
                                "prevalence_slow_disease" = "#a8bf6d", 
                                "prevalence_fast_disease" = "#5cb090"), 
                    labels = c("prevalence_present_disease" = "Present",
                               "prevalence_slow_disease" = "Slow (<1cm)",
                               "prevalence_fast_disease" = "Fast (>1cm)"),
                    breaks = c("prevalence_present_disease",
                               "prevalence_slow_disease", 
                               "prevalence_fast_disease"),
                    name = NULL) +  # Set name to NULL to remove legend title
    # scale_y_continuous(expand = expansion(mult = c(0, 0)), 
    #                     limits = c(0, max(FGB_dis_long$prevalence) * 1.25)) +  # Add space beyond the maximum value
   scale_y_reverse(
         expand = expansion(mult = c(0.1, 0))  # No space at the bottom
     ) +
    theme_Publication(base_size = 16) +
  theme(
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),  # Remove y-axis labels
    axis.ticks.y = element_blank(),  # Remove ticks on y-axis
    axis.title.y = element_blank(),  # Remove title for y-axis
    legend.position = "bottom",
    plot.title = element_text(hjust = 0.5)  # Center the title
  )
  

combined_plot <- (dis_plot + g.mid + bleach_plot) +  
  plot_layout(ncol = 3, widths = c(1, 1, 1)) +  # Adjust widths if necessary  
  plot_annotation(
    title =full_name(select_region),
    theme = theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
  )  

  ggsave("combined_plot.png", plot = combined_plot, width = 14, height = 10, dpi = 300)


  return(combined_plot)
}


                    
  
new_bleaching_disease(region = select_region, species_list = species_list)

```

## Figure 6: Size Frequency + Density + Mortality

#### Define Sampling Years

```{r}
sampling_years <- switch(select_region,
                         "FGB" = c(2013, 2018, 2024),
                         "SEFCRI" = c(2016, 2018, 2022),
                         NULL) 

```

```{r}

#define species
species <- "MON CAVE"

tmp <- NCRMP_make_size_bins(region = select_region , project = "NCRMP_DRM", years = sampling_years,
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = species) 

data <- tmp$demos %>%
  filter(SPECIES_CD == species) %>%
  mutate(YEAR = as.factor(YEAR))

plot <- data %>%
  filter(!is.na(YEAR)) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  ggplot(aes(x = MAX_DIAMETER, group = YEAR, fill = YEAR, color = YEAR)) +
  geom_density(aes(y = after_stat(count)), adjust = 1, alpha = 0.4, size = 1) + 
  theme_minimal(base_size = 18) +
  ggtitle(unique(data$SPECIES_NAME)) +
  xlab("Maximum Diameter (cm)") +
  ylab("Density (Weighted by Frequency)") + 
  theme(
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 16),
    legend.position = "right",
    plot.title = element_text(face = "bold")
  ) +
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

ggsave("density_weighted.png", plot = plot, width = 15, height = 8, dpi = 300)

print(plot)
```

```{r}
#define species
species = "ORB FRAN"
tmp <- NCRMP_make_size_bins(region = "FGB", project = "NCRMP", years  = c(2013, 2018, 2024),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = species) 


data <- tmp$demos %>%
  filter(SPECIES_CD == species) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  group_by(YEAR, MAX_DIAMETER) %>%
  summarise(mean_mortality = mean(RECENT_MORT, na.rm = TRUE)) %>% 
  mutate(relative_mortality = mean_mortality / max(mean_mortality, na.rm = TRUE)) %>%
  ungroup()


plot <- data %>%
  

  ggplot(aes(x = MAX_DIAMETER, y = relative_mortality,color = YEAR, fill = YEAR)) + 

  theme_minimal(base_size = 18) +
  theme_minimal(base_size = 18) +
  ggtitle(unique(data$SPECIES_CD)) +
  geom_smooth(method = "loess", se = FALSE) +
  xlab("Bin Name (Max Diameter Bin)") +
  ylab("Average Recent Mortality") +
  theme(
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 16),
    legend.position = "right",
    plot.title = element_text(face = "bold")
  ) +
  ylim(0,1)+
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))


print(plot)

```

#### Combined Plot

```{r}


#define species
species = "MON CAVE"
tmp <- NCRMP_make_size_bins(region = "PRICO", project = "NCRMP", years  = sampling_years,
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = species) 


data <- tmp$demos %>%
  filter(SPECIES_CD == species) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  group_by(YEAR, MAX_DIAMETER) %>%
  summarise(mean_mortality = mean(RECENT_MORT, na.rm = TRUE)) %>%
  ungroup()

print(data)

plot <- data %>%
  

  ggplot(aes(x = MAX_DIAMETER, y = mean_mortality, fill = YEAR)) + 
  geom_dotplot(binaxis = "y", stackdir = "center") +  # Dot plot
  theme_minimal(base_size = 18) +
  theme_minimal(base_size = 18) +
  ggtitle(unique(data$SPECIES_CD)) +
  xlab("Bin Name (Max Diameter Bin)") +
  ylab("Average Recent Mortality") +
  theme(
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 16),
    legend.position = "right",
    plot.title = element_text(face = "bold")
  ) +
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))




print(plot)
```

```{r}
print(PRICO_2016_benthic_cover)
```
