---
title: "FinalQuarto"
format: html
editor: visual
---

## Tech Memo

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(cowplot)
library(grid)
library(ggthemes)
library(extrafont)
library(grid)
library(ggthemes)
library(extrafont)
library(shinydashboard)
library(shiny)
library(plotly)
library(tidyverse)
#library(ncrmp.benthics.analysis)
library(ggplot2)
library(cowplot)
library(gridExtra)
library(egg)
library(leaflet)
library(leaflet.extras)
library(mgcv)

#Julia
function_files <- list.files("R", pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)


```

Inputs

```{r}
select_region <- "FGB"
select_year <- 2024

```

```{r}
species_list <- switch(select_region,
                    "SEFCRI" = c("Stephanocoenia intersepta", "Siderastrea siderea", "Orbicella faveolata", "Siderastrea radians", "Meandrina meandrites", "Pseudodiploria strigosa", "Porites divaricata", "Solenastrea hyades", "Agaricia lamarcki", "Montastraea cavernosa", "Agaricia agaricites", "Porites astreoides", "Oculina diffusa", "Colpophyllia natans", "Solenastrea bournoni", "Dichocoenia stokesii", "Porites porites", "Pseudodiploria clivosa", "Acropora cervicornis", "Agaricia fragilis", "Madracis auretenra", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Orbicella franksi", "Favia fragum", "Madracis decactis", "Porites furcata", "Mycetophyllia aliciae"),
                    
                    "FLK" = c("Agaricia agaricites", "Siderastrea radians", "Porites divaricata", "Porites porites", "Helioceris cucullata", "Siderastrea siderea", "Agaricia humilis", "Porites furcata", "Eusmilia fastigiata", "Solenastrea bournoni", "Stephanocoenia intersepta", "Porites astreoides", "Agaricia lamarcki", "Orbicella franksi", "Montastraea cavernosa", "Diploria labyrinthiformis", "Agaricia fragilis", "Manicina areolata", "Orbicella faveolata", "Scolymia cubensis", "Pseudodiploria strigosa", "Porites branneri", "Dichocoenia stokesii", "Solenastrea hyades", "Orbicella annularis", "Colpophyllia natans", "Meandrina meandrites", "Oculina spp", "Madracis auretenra", "Madracis decactis", "Mycetophyllia aliciae", "Pseudodiploria clivosa", "Acropora cervicornis"),
                    
                    "Tortugas" = c("Agaricia agaricites", "Siderastrea siderea", "Orbicella faveolata", "Orbicella franksi", "Montastraea cavernosa", "Porites divaricata", "Porites porites", "Agaricia fragilis", "Porites furcata", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Mycetophyllia aliciae", "Siderastrea radians", "Stephanocoenia intersepta", "Agaricia humilis", "Eusmilia fastigiata", "Agaricia lamarcki", "Diploria labyrinthiformis", "Porites astreoides", "Dichocoenia stokesii", "Acropora cervicornis", "Colpophyllia natans", "Solenastrea bournoni", "Madracis decactis", "Meandrina meandrites", "Helioceris cucullata", "Orbicella annularis"),
                    
                    "FGB" = c("Agaricia agaricites", "Agaricia fragilis", "Agaricia humilis", "Colpophyllia natans", "Helioceris cucullata", "Madracis auretenra", "Madracis decactis", "Meandrina meandrites", "Montastraea cavernosa", "Mussa angulosa", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Pseudodiploria strigosa", "Scolymia cubensis", "Siderastrea siderea", "Stephanocoenia intersepta", "Tubastraea coccinea"),
                    
                    "PRICO" = c("Acropora cervicornis", "Acropora palmata", "Agaricia agaricites", "Agaricia fragilis", "Agaricia grahamae", "Agaricia humilis", "Agaricia lamarcki", "Agaricia tenuifolia", "Colpophyllia natans", "Dendrogyra cylindrus", "Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Favia fragum", "Helioceris cucullata", "Madracis auretenra", "Madracis decactis", "Manicina areolata", "Meandrina danae", "Meandrina jacksoni", "Meandrina meandrites", "Montastraea cavernosa", "Mycetophyllia aliciae", "Mycetophyllia ferox", "Oculina diffusa", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Porites branneri", "Porites divaricata", "Porites furcata", "Porites porites", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Scolymia cubensis", "Siderastrea radians", "Siderastrea siderea", "Solenastrea bournoni", "Stephanocoenia intersepta"),
                    
                    "STTSTJ" = c("Acropora cervicornis", "Acropora palmata", "Agaricia agaricites", "Agaricia fragilis", "Agaricia grahamae", "Agaricia humilis", "Agaricia lamarcki", "Agaricia tenuifolia", "Colpophyllia natans", "Dendrogyra cylindrus", "Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Favia fragum", "Helioceris cucullata", "Isophyllia sinuosa", "Madracis auretenra", "Madracis carmabi", "Madracis decactis", "Madracis formosa", "Manicina areolata", "Meandrina meandrites", "Montastraea cavernosa", "Mycetophyllia aliciae", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Porites colonensis", "Porites divaricata", "Porites furcata", "Porites porites", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Siderastrea radians", "Siderastrea siderea", "Solenastrea bournoni", "Stephanocoenia intersepta"),
                    
                    "STX" = c("Acropora palmata", "Agaricia agaricites", "Agaricia fragilis", "Agaricia grahamae", "Agaricia humilis", "Agaricia lamarcki", "Agaricia tenuifolia", "Colpophyllia natans", "Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Favia fragum", "Helioceris cucullata", "Isophyllastrea rigida", "Isophyllia sinuosa", "Madracis auretenra", "Madracis decactis", "Madracis formosa", "Manicina areolata", "Meandrina meandrites", "Montastraea cavernosa", "Mycetophyllia aliciae", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Porites astreoides", "Porites branneri", "Porites colonensis", "Porites divaricata", "Porites furcata", "Porites porites", "Pseudodiploria clivosa", "Pseudodiploria strigosa", "Siderastrea radians", "Siderastrea siderea", "Solenastrea bournoni", "Stephanocoenia intersepta")
  )
    

```

#gets full name of region for titles

```{r}
full_name <- function(region) {
  
  name <- case_when(
  region == "SEFCRI" ~ "Southeast Florida",
  region == "FLK" ~ "Florida Keys",
  region == "Tortugas" ~ "Dry Tortugas",
  region == "STX" ~"St Croix",
  region == "STTSTJ" ~"St Thomas St Johns",
  region == "PRICO" ~"Puerto Rico",
  region == "FGB" ~"Flower Gardens",
  
  
)
  return(name)
}

```

```{r}
data <- switch(select_region,
                    "SEFCRI" = NCRMP_SEFCRI_2014_22_cover_region,
                    "FLK" = NCRMP_FLK_2014_22_cover_region,
                    "Tort" = NCRMP_Tort_2014_22_cover_region,
                    "FGB" = NCRMP_FGBNMS_2013_24_cover_region,
                    "PRICO" = NCRMP_PRICO_2014_23_cover_region,
                    "STTSTJ" = NCRMP_STTSTJ_2013_23_cover_region,
                    "STX" = NCRMP_STX_2015_23_cover_region)

group_names = c("MACROALGAE", "HARD CORALS")



#call GAM function
GAM_function(data, response ="avCvr", group_var = "cover_group", group_names = group_names, kvalue = 3)

if ("cover_group" %in% colnames(data)) {
  data <- data %>%
    filter(cover_group %in% group_names) %>%
    mutate(
      avCvr = as.numeric(avCvr),
      SE = as.numeric(SE)
    )
}

GAM_plot <- ggplot(data, aes(x = YEAR, y = avCvr, group = cover_group)) +
      geom_point(aes(color = cover_group), size = 2) +
      geom_line(aes(color = cover_group), size = 1) +
      geom_errorbar(aes(ymin = avCvr - SE, ymax = avCvr + SE), width = 0.1) +
      geom_smooth(method = "gam", formula = y ~ s(x, k = 3),
                  aes(color = cover_group), se = TRUE, size = 2, show.legend = FALSE) +
      scale_color_manual(values = c("HARD CORALS" = "#FF7F50", "MACROALGAE" = "#26BA41"),
                         labels = c('Coral', 'Macroalgae')) +
      theme_Publication(base_size = 20) +
      ggtitle(full_name(select_region))+
      labs(x = "Year", y = "Cover (%)")

  
print(GAM_plot)

```

```{r}
data <- switch(select_region,
                    "SEFCRI" = NCRMP_SEFCRI_2014_22_cover_region,
                    "FLK" = NCRMP_FLK_2014_22_cover_region,
                    "Tort" = NCRMP_Tort_2014_22_cover_region,
                    "FGB" = NCRMP_FGBNMS_2013_24_cover_region,
                    "PRICO" = NCRMP_PRICO_2014_23_cover_region,
                    "STTSTJ" = NCRMP_STTSTJ_2013_23_cover_region,
                    "STX" = NCRMP_STX_2015_23_cover_region)

group_names = c( "HARD CORALS", "MACROALGAE")
```

```{r}
print("GAM test results: Hard Coral")
GAM_function(data, response ="avCvr", group_var = "cover_group", group_names = "HARD CORALS", kvalue = 3)
```



```{r}
print("GAM test results: Macroalgae")
GAM_function(data, response ="avCvr", group_var = "cover_group", group_names = "MACROALGAE", kvalue = 3)
```

```{r}

if ("cover_group" %in% colnames(data)) {
  data <- data %>%
    filter(cover_group %in% group_names) %>%
    mutate(
      avCvr = as.numeric(avCvr),
      SE = as.numeric(SE)
    )
}

data <- data %>%
  mutate(YEAR = as.factor(YEAR))

GAM_plot <- ggplot(data, aes(x = YEAR, y = avCvr, group = cover_group)) +
      geom_point(aes(color = cover_group), size = 2) +
      geom_line(aes(color = cover_group), size = 1) +
      geom_errorbar(aes(ymin = avCvr - SE, ymax = avCvr + SE, color = cover_group), width = 0.1) +
      geom_smooth(method = "gam", formula = y ~ s(x, k = 3),
                  aes(color = cover_group), se = TRUE, size = 2, show.legend = FALSE) +
      scale_color_manual(values = c("HARD CORALS" = "#FF7F50", "MACROALGAE" = "#26BA41"),
            labels = c('Coral', 'Macroalgae')) +
    

      theme_Publication()+
      ggtitle(full_name(select_region))+
  guides(linetype = guide_legend(override.aes = list(size = 2, linetype = c("solid", "dotted")))) + 
      labs(x = "Year", y = "Cover (%)", color = ' ')


ggsave("gam_cover.png", plot = GAM_plot, width = 15, height = 8, dpi = 300)

GAM_plot

```

```{r}
data <- switch(select_region,
                    "SEFCRI" = NCRMP_SEFCRI_2014_22_cover_region,
                    "FLK" = NCRMP_FLK_2014_22_cover_region,
                    "Tort" = NCRMP_Tort_2014_22_cover_region,
                    "FGB" = NCRMP_FGBNMS_2013_24_cover_region,
                    "PRICO" = NCRMP_PRICO_2014_23_cover_region,
                    "STTSTJ" = NCRMP_STTSTJ_2013_23_cover_region,
                    "STX" = NCRMP_STX_2015_23_cover_region)

group_names = c( "HARD CORALS", "MACROALGAE")



#call GAM function
GAM_function(data, response ="avCvr", group_var = "cover_group", group_names = group_names, kvalue = 3)

if ("cover_group" %in% colnames(data)) {
  data <- data %>%
    filter(cover_group %in% group_names) %>%
    mutate(
      avCvr = as.numeric(avCvr),
      SE = as.numeric(SE)
    )
}

data <- data %>%
  mutate(YEAR = as.factor(YEAR))

GAM_plot <- ggplot(data, aes(x = YEAR, y = avCvr, group = cover_group)) +
      geom_point(aes(color = cover_group), size = 2) +
      geom_line(aes(color = cover_group), size = 1) +
      geom_errorbar(aes(ymin = avCvr - SE, ymax = avCvr + SE, color = cover_group), width = 0.1) +
      geom_smooth(method = "gam", formula = y ~ s(x, k = 3),
                  aes(color = cover_group), se = TRUE, size = 2, show.legend = FALSE) +
      #scale_color_manual(values = c("HARD CORALS" = "#FF7F50", "MACROALGAE" = "#26BA41"),
  #           labels = c('Coral', 'Macroalgae')) +
      scale_color_manual(values = c('deepskyblue4', 'springgreen4'),
                         labels = c('Coral', 'Macroalgae')) +
      theme_Publication() +
      ggtitle(full_name(select_region))+
  guides(linetype = guide_legend(override.aes = list(size = 2, linetype = c("solid", "dotted")))) + 
      labs(x = "Year", y = "Cover (%)", color = ' ')
```

```{ggsave("gam_cover.png", plot = GAM_plot, width = 15, height = 8, dpi = 300)}

  
print(GAM_plot)

```

```{r}
data <- switch(select_region,
                    "SEFCRI" = NCRMP_SEFCRI_2014_22_cover_region,
                    "FLK" = NCRMP_FLK_2014_22_cover_region,
                    "Tort" = NCRMP_Tort_2014_22_cover_region,
                    "FGBNMS" = NCRMP_FGBNMS_2013_24_cover_region,
                    "PRICO" = NCRMP_PRICO_2014_23_cover_region,
                    "STTSTJ" = NCRMP_STTSTJ_2013_23_cover_region,
                    "STX" = NCRMP_STX_2015_23_cover_region)

group_names = c( "HARD CORALS", "MACROALGAE")



#call GAM function
GAM_function(data, response ="avCvr", group_var = "cover_group", group_names = group_names, kvalue = 3)

if ("cover_group" %in% colnames(data)) {
  data <- data %>%
    filter(cover_group %in% group_names) %>%
    mutate(
      avCvr = as.numeric(avCvr),
      SE = as.numeric(SE)
    )
}

GAM_plot <- ggplot(data, aes(x = YEAR, y = avCvr, group = cover_group)) +
      geom_point(aes(color = cover_group), size = 2) +
      geom_line(aes(color = cover_group), size = 1) +
      geom_errorbar(aes(ymin = avCvr - SE, ymax = avCvr + SE), width = 0.1) +
      geom_smooth(method = "gam", formula = y ~ s(x, k = 3),
                  aes(color = cover_group), se = TRUE, size = 2, show.legend = FALSE) +
      facet_wrap(~cover_group, scales = "free")+
      #scale_color_manual(values = c("HARD CORALS" = "#FF7F50", "MACROALGAE" = "#26BA41"),
  #           labels = c('Coral', 'Macroalgae')) +
      scale_color_manual(values = c('deepskyblue4', 'springgreen4'),
                         labels = c('Coral', 'Macroalgae')) +
      theme_Publication() +
      ggtitle(full_name(select_region))+
      labs(x = "Year", y = "Cover (%)") 


  
print(GAM_plot)
```

OLD Macroalgae / Coral Cover Plot NO GAM Function (w/Letters)

```{r}

cover_plot <- function(region, samp_year) {
  
  
  data_1 <- switch(region,
                    "SEFCRI" = NCRMP_SEFCRI_2014_22_cover_region,
                    "FLK" = NCRMP_FLK_2014_22_cover_region,
                    "Tort" = NCRMP_Tort_2014_22_cover_region,
                    "FGBNMS" = NCRMP_FGBNMS_2013_24_cover_region,
                    "PRICO" = NCRMP_PRICO_2014_23_cover_region,
                    "STTSTJ" = NCRMP_STTSTJ_2013_23_cover_region,
                    "STX" = NCRMP_STX_2015_23_cover_region)



coral_plot <- data_1 %>%
  filter(cover_group == "HARD CORALS") %>%
  NCRMP_perform_ttest(
                           metric1 = 'coral_cover',
                           metric2 = 'avCvr',
                           alpha = 0.05,
                           n_years = 6,
                           return_dataframe = TRUE) %>%
  mutate(
    Significance = 
      if_else(
        YEAR == min(YEAR), FALSE, 
        if_else(
          (lag(avCvr)>= LCI & lag(avCvr)<= UCI) |
            (avCvr >= lag(LCI) & avCvr <= lag(UCI)),  
          FALSE,
          TRUE 
        )
      ),
    Label = letters[cumsum(Significance == TRUE)+ 1],
    #Factorize Year
    YEAR = as.factor(as.character(YEAR)),
    facet_label = "Hard corals"
  ) %>% mutate(Type = "Coral")
    
macroalgae_plot <- data_1 %>%
  filter(cover_group == "MACROALGAE") %>%
  NCRMP_perform_ttest(
                           metric1 = 'macroalgae_cover',
                           metric2 = 'avCvr',
                           alpha = 0.05,
                           n_years = 6,
                           return_dataframe = TRUE) %>%
  mutate(
    Significance = 
      if_else(
        YEAR == min(YEAR), FALSE, 
        if_else(
          (lag(avCvr)>= LCI & lag(avCvr)<= UCI) |
            (avCvr >= lag(LCI) & avCvr <= lag(UCI)),  
          FALSE,
          TRUE 
        )
      ),
    Label = letters[cumsum(Significance == TRUE)+ 1],
    YEAR = as.factor(as.character(YEAR)),
    facet_label = "Macroalage"
  ) %>% mutate(Type = "Macroalgae")



coral_macro_plot <- bind_rows(coral_plot, macroalgae_plot) %>%
    ggplot(aes(x = YEAR, y = avCvr,
               group = interaction(Type, REGION),  
               color = REGION,                     
               linetype = Type,                  
               label = Label)) +
  geom_point(size = 2, color = "black") +
  geom_line(linewidth = 2, color = "black") +
  geom_errorbar(aes(x = YEAR, 
                    ymin = avCvr - SE, 
                    ymax = avCvr + SE), 
                width = .1, color = "black") +
    geom_text(aes(label = Label),
            vjust = -1,
            size = 5,
            color = "black",
            fontface = "bold",
            check_overlap = TRUE
            )
  labs(x = "Year", 
       y = "Cover (%)", 
       title = region) +
  scale_x_discrete(limit = as.character(c(2014:samp_year))) +
  theme_Publication(base_size = 20)  +

  
return(coral_macro_plot)
  
    ggsave("coral_macro_plot.png", plot = coral_macro_plot, width = 15, height = 8, dpi = 300)


}


cover_plot(select_region, select_year)
```

####Density

```{r}



density_data <- switch(select_region,
    "SEFCRI" = NCRMP_DRM_SEFCRI_2014_22_density_region %>%
        filter(!YEAR %in% c(2015, 2017, 2019,2021,  2023)),
    "FLK" = NCRMP_DRM_FLK_2014_22_density_region %>%
        filter(!YEAR %in% c(2015, 2017, 2019, 2021,2023)),
    "Tort" = NCRMP_Tort_2014_22_density_region %>%
        filter(!YEAR %in% c(2015, 2017, 2019, 2021,2023)),
    "FGB" = NCRMP_FGBNMS_2013_24_density_region,
    "PRICO" = NCRMP_PRICO_2014_23_density_region,
    "STTSTJ" = NCRMP_STTSTJ_2013_23_density_region,
    "STX" = NCRMP_STX_2015_23_density_region
)


GAM_function(density_data, response = "avDen")

density_data <- density_data%>%
  mutate(YEAR = as.factor(YEAR))

plt <- ggplot(density_data, aes(x = YEAR, y = avDen)) +
    geom_point(size = 2) +
    geom_line(aes(group = 1), size = 1) +  # Add group=1 to ensure line connects points
    geom_errorbar(aes(ymin = avDen - SE, ymax = avDen + SE), width = 0.1) +
    geom_smooth(aes(x = as.numeric(YEAR)), method = "gam", formula = y ~ s(x, k = 3), se = TRUE, size = 2) +
    theme_Publication() +
    ggtitle(full_name(select_region)) +
    labs(x = "Year", y = "Density (col/m^2)")

print(plt)


print(plt)
```




Density Species

```{r}
select_region = "FGB"
density_data_2 <- switch(select_region,
    "SEFCRI" = NCRMP_DRM_SEFCRI_2014_22_density_region %>%
        filter(!YEAR %in% c(2015, 2017, 2019,2021,  2023)),
    "FLK" = NCRMP_DRM_FLK_2014_22_density_region %>%
        filter(!YEAR %in% c(2015, 2017, 2019, 2021,2023)),
    "Tort" = NCRMP_Tort_2014_22_density_region %>%
        filter(!YEAR %in% c(2015, 2017, 2019, 2021,2023)),
    "FGB" = NCRMP_FGBNMS_Occ_Den_CV,
    "PRICO" = NCRMP_PRICO_Occ_Den_CV,
    "STTSTJ" = NCRMP_STTSTJ_2013_23_density_region,
    "STX" = NCRMP_STX_2015_23_density_region
)


GAM_function(density_data_2, response = "avDen")

density_data_2 <- density_data_2%>%
  mutate(YEAR = as.factor(YEAR)) %>%
  filter(SPECIES_CD == "Colpophyllia natans")




p1_dens <- ggplot(density_data_2, aes(x = YEAR, y = avDen, group = 1)) +  # Add group = 1 to connect all points
  geom_line(size = 1.5, color = "black") +  # Draw thicker lines for each region
  geom_point(size = 2, color = "black") +  # Add points for better visibility
  geom_errorbar(aes(ymin = avDen - SE, ymax = avDen + SE), width = 0.2, color = "black") +  # Add error bars
   geom_smooth(method = "gam", formula = y ~ s(x, k= kvalue), color="blue", size=2) +
  labs(x = "Year",
     y = expression(bold("Average Density " ~ (col/m^2))),
   ) +
  scale_y_continuous(expand = c(0, 0), 
                     limits = c(0, 3.25)) + 
  theme_Publication(base_size = 20)

p1_dens
# plt <- ggplot(density_data, aes(x = YEAR, y = avDen, group = 1)) +
#     geom_line(size = 1.5, color = "black") +  # Draw thicker lines for each region
#     geom_point(size = 2, color = "black") + 
#     geom_errorbar(aes(ymin = avDen - SE, ymax = avDen + SE), width = 0.2, color = "black") +  # Add error bars
#     geom_smooth(method = "gam", formula = y ~ s(x, k = 3), color="blue", size=2) +  # Ensure kvalue is defined
#     labs(x = "Year",
#          y = expression(bold("Average Density " ~ (col/m^2)))) +  # Fixed syntax error
#     scale_y_continuous(expand = c(0, 0), limits = c(0, 3.25)) +  
#     theme_Publication() +
#     ggtitle(full_name(select_region))  # Moved inside the ggplot chain
# 
# plt

```



```{r}

(STTSTJ.plot.cv_occ <- NCRMP_DRM_colony_density_CV_and_occurrence("FGB", "Flower Gardens Banks"))
ggsave(paste("FGB", ".plot.cv_occ", ".jpeg", sep=""),
       path = "./figs",
       width = 12,
       height = 10,
       dpi = 300)

```

```{}
```

Coral Demo Plot

```{r}


coral_demo <- function(region, year, species_list, project) {
  
  weighted_means <- switch(region,
                    "SEFCRI" = NCRMP_DRM_SEFCRI_Occ_Den_CV,
                    "FLK" =NCRMP_DRM_FLK_Occ_Den_CV,
                    "Tort" = NCRMP_Tort_Occ_Den_CV,
                    "FGBNMS" = NCRMP_FGBNMS_Occ_Den_CV,
                    "PRICO" = NCRMP_PRICO_Occ_Den_CV,
                    "STTSTJ" = NCRMP_STTSTJ_Occ_Den_CV,
                    "STX" = NCRMP_STX_Occ_Den_CV)
  
  
  old_mort <- NCRMP_DRM_calculate_mortality(region = region, project = project)

  old_mort_spp <- old_mort$Domain_est_old_mort_species

  rec_mort_spp <- old_mort$Domain_est_rec_mort_species

  mean_col_size <- NCRMP_DRM_calculate_mean_colony_size(region = region, project = project)

  size_spp <- mean_col_size$Domain_est_species

  plot <- plot_coral_demographics(region, year, weighted_means, old_mort_spp, size_spp, rec_mort_spp, species_list) 

  ggsave("demo_plot.png", plot = plot, width = 15, height = 8, dpi = 300)
}



coral_demo(region = select_region, year = select_year, species_list = species_list, project = "NCRMP_DRM")
```

Bleaching and Disease

```{r}
library(tidyverse)
new_bleaching_disease <- function(region, species_list) {
  
  dataset <- switch(region,
    "SEFCRI" = SEFCRI_2022_coral_demographics,
    "FLK" = FLK_2022_coral_demographics,
    "Tort" = Tort_2022_coral_demographics,
    "FGB" = FGBNMS_2024_coral_demographics,
    "PRICO" = USVI_2023_coral_demographics,
    "STTSTJ" = USVI_2023_coral_demographics,
    "STX" = USVI_2023_coral_demographics
  )
  
  
  # Process the dataset
  summary <- dataset %>%
 mutate(
    SPECIES_NAME = ifelse(SPECIES_NAME == "Orbicella annularis species complex", "Orbicella annularis", SPECIES_NAME),
    SPECIES_CD = ifelse(SPECIES_NAME == "Orbicella annularis", "ORB ANNU", SPECIES_CD)
  ) %>%
  filter(!grepl("spp", SPECIES_NAME, ignore.case = TRUE)) %>% 
  filter(N != 0, JUV != 1) %>%
  group_by(SPECIES_NAME) %>%
  summarise(
    total_colonies = sum(N, na.rm = TRUE),
    n_no_bleaching = sum(BLEACH_CONDITION == "N", na.rm = TRUE),
    n_partial_bleaching = sum(BLEACH_CONDITION == "PB", na.rm = TRUE),
    n_paling = sum(BLEACH_CONDITION == "P", na.rm = TRUE),
    n_total_bleaching = sum(BLEACH_CONDITION == "T", na.rm = TRUE),
    total_bleaching_conditions = n_partial_bleaching + n_paling + n_total_bleaching,
    n_present_disease = sum(DISEASE == "P", na.rm = TRUE),
    n_fast_disease = sum(DISEASE == "F", na.rm = TRUE),
    n_slow_disease = sum(DISEASE == "S", na.rm = TRUE),
    total_disease_conditions = n_fast_disease + n_slow_disease,
    .groups = 'drop'
  ) %>%
  mutate(
    prevalence_no_bleaching = 100 *(n_no_bleaching / total_colonies),
    prevalence_partial_bleaching = 100 *(n_partial_bleaching / total_colonies),
    prevalence_paling = 100* (n_paling / total_colonies),
    prevalence_total_bleaching = 100 * (n_total_bleaching / total_colonies),
    prevalence_all_bleaching_conditions = 100 * (total_bleaching_conditions / total_colonies),
    prevalence_present_disease =100 * (n_present_disease / total_colonies),
    prevalence_fast_disease = 100 * (n_fast_disease / total_colonies),
    prevalence_slow_disease = 100 * (n_slow_disease / total_colonies),
    prevalence_all_disease = 100 * (total_disease_conditions / total_colonies),
  ) %>%
 filter(!( total_bleaching_conditions == 0 & total_disease_conditions == 0)) %>%
  mutate(FontFace = ifelse(SPECIES_NAME %in% c("Acropora cervicornis", "Acropora palmata", "Dendrogyra cylindrus", "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Mycetophyllia ferox"), "bold.italic", "italic"),
         #combined_label = paste(SPECIES_NAME, " ", "(", total_colonies, ")", sep = " ")  # Add space before parentheses only
         combined_label = paste(SPECIES_NAME, " ", "(", total_colonies, ")", sep = "")  # No space before parentheses
  )
 
  
  
  # Create the middle plot
g.mid <- ggplot(summary, aes(x = 1, y = reorder(SPECIES_NAME, prevalence_all_bleaching_conditions))) +
  geom_text(aes(label = combined_label, fontface = FontFace), size = 5, hjust = 0.5) +  # Use combined_label
  geom_segment(aes(x = 0.9, xend = 0.92, yend = SPECIES_NAME)) +
  geom_segment(aes(x = 1.08, xend = 1.1, yend = SPECIES_NAME)) +
  ylab(NULL) +
  scale_x_continuous(expand = expansion(mult = c(0, 0)), limits = c(0.9, 1.1)) +
  theme(axis.title = element_blank(),
        panel.grid = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        panel.background = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.margin = unit(c(0, 0, 0, 0), "mm"))
  
  # Long format data for bleaching
ble_long <- summary %>%
  pivot_longer(
    cols = starts_with("prevalence_"),  # Adjust if needed to include only relevant columns
    names_to = "bleaching_condition",
    values_to = "prevalence"
  ) %>%
  filter(bleaching_condition %in% c("prevalence_partial_bleaching", 
                                     "prevalence_paling", 
                                     "prevalence_total_bleaching"))%>%
  dplyr::select(SPECIES_NAME, bleaching_condition, prevalence)  # Keep only the desired columns


# Set the order of the bleaching_condition
ble_long$bleaching_condition <- factor(ble_long$bleaching_condition,
                                               levels =c("prevalence_total_bleaching",
                                                      "prevalence_partial_bleaching",
                                                          "prevalence_paling"))
  
  
  # Create bleaching plot
bleach_plot <-  ggplot(ble_long, aes(x = reorder(SPECIES_NAME, prevalence), y = prevalence, fill = bleaching_condition)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip for horizontal bars
  labs(title = "Bleaching Prevalence (%)",  # Add title here
       y = "Prevalence") +  # Remove fill title here
  scale_fill_manual(values = c("prevalence_total_bleaching" = "#c5deda",
                                "prevalence_partial_bleaching" = "#FF9B71",
                                "prevalence_paling" = "#a17c9b"),
                    breaks = c("prevalence_paling", "prevalence_partial_bleaching", "prevalence_total_bleaching"),
                    labels = c("Paling", "Partial", "Total"),
                    name = NULL) +  # Set name to NULL to remove legend title
  scale_y_continuous(expand = expansion(mult = c(0, 0)), limits = c(0, max(ble_long$prevalence) * 1.25)) +  # No space at the bottom
  theme_Publication(base_size = 16) +
  theme(axis.title.x = element_blank(),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_blank(),  # Use element_markdown for rich text
        legend.position = "bottom",
        axis.ticks.y = element_blank(),  # Remove ticks on y-axis
        axis.title.y = element_blank(),  # Remove title for y-axis
        plot.title = element_text(hjust = 0.5))  # Center the title
  

species_order <- summary %>%
  arrange(prevalence_all_bleaching_conditions) %>%
  pull(SPECIES_NAME)
  
dis_long <- summary %>%
  pivot_longer(
    cols = starts_with("prevalence_"),  # Adjust if needed to include only relevant columns
    names_to = "disease_condition",
    values_to = "prevalence"
  ) %>%
  filter(disease_condition %in% c("prevalence_present_disease",
                                      "prevalence_fast_disease", 
                                     "prevalence_slow_disease"))%>%
  dplyr::select(SPECIES_NAME, disease_condition, prevalence)  # Keep only the desired columns

# Order SPECIES_NAME based on the previous order
dis_long$SPECIES_NAME <- factor(dis_long$SPECIES_NAME, levels = species_order)

# Set the order for disease_condition
dis_long$disease_condition <- factor(dis_long$disease_condition, 
                                             levels = c("prevalence_fast_disease",
                                                        "prevalence_slow_disease",
                                                      "prevalence_present_disease"))
  
  # Create disease plot
dis_plot <-  ggplot(dis_long, aes(x = SPECIES_NAME, y = prevalence, fill = disease_condition)) +
  geom_bar(stat = "identity") +
  coord_flip() +  # Flip for horizontal bars
  labs(title = "Disease Prevalence (%)",  # Add title here
       y = "Prevalence") +  # Remove fill title here
  scale_fill_manual(values = c("prevalence_present_disease" = "#e3c869",
                                "prevalence_slow_disease" = "#a8bf6d", 
                                "prevalence_fast_disease" = "#5cb090"), 
                    labels = c("prevalence_present_disease" = "Present",
                               "prevalence_slow_disease" = "Slow (<1cm)",
                               "prevalence_fast_disease" = "Fast (>1cm)"),
                    breaks = c("prevalence_present_disease",
                               "prevalence_slow_disease", 
                               "prevalence_fast_disease"),
                    name = NULL) +  # Set name to NULL to remove legend title
    # scale_y_continuous(expand = expansion(mult = c(0, 0)), 
    #                     limits = c(0, max(FGB_dis_long$prevalence) * 1.25)) +  # Add space beyond the maximum value
   scale_y_reverse(
         expand = expansion(mult = c(0.1, 0))  # No space at the bottom
     ) +
    theme_Publication(base_size = 16) +
  theme(
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),  # Remove y-axis labels
    axis.ticks.y = element_blank(),  # Remove ticks on y-axis
    axis.title.y = element_blank(),  # Remove title for y-axis
    legend.position = "bottom",
    plot.title = element_text(hjust = 0.5)  # Center the title
  )
  


combined_plot <- dis_plot + g.mid + bleach_plot + 
  plot_layout(ncol = 3, widths = c(1, 1, 1)) +  # Adjust the widths as needed
  plot_annotation(title = "Flower Garden Banks",  # Add overarching title here
                  theme = theme(plot.title = element_text(hjust = 0.5, size = 20, face= "bold")))  # Center and size the title


  ggsave("combined_plot.png", plot = combined_plot, width = 14, height = 10, dpi = 300)


  return(combined_plot)
}


  species_list = c(
"Montastraea cavernosa",
"Orbicella faveolata",
"Siderastrea siderea",
"Stephanocoenia intersepta","Porites porites",
"Agaricia agaricites",
"Colpophyllia natans",
"Pseudodiploria strigosa",
"Orbicella franksi",
"Madracis decactis",
"Porites astreoides")
                    
  
new_bleaching_disease(region = "FGB", species_list = species_list)


```


```{r}
NCRMP_DRM_colony_density_CV_and_occurrence <- function (region, ptitle, species_filter = "NULL")  
{
  
    coral_species <- switch(region,
                            "STX" = c("Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Acropora cervicornis", "Acropora palmata", "Dendrogyra cylindrus", "Mycetophyllia ferox", "Colpophyllia natans","Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Meandrina meandrites", "Pseudodiploria strigosa", "Pseudodiploria clivosa"),
                            "STTSTJ" = c("Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Acropora cervicornis", "Acropora palmata", "Dendrogyra cylindrus", "Mycetophyllia ferox", "Colpophyllia natans","Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Meandrina meandrites", "Pseudodiploria strigosa", "Pseudodiploria clivosa"),
                            "PRICO" = c("Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", "Acropora cervicornis", "Acropora palmata", "Dendrogyra cylindrus", "Mycetophyllia ferox", "Colpophyllia natans","Dichocoenia stokesii", "Diploria labyrinthiformis", "Eusmilia fastigiata", "Meandrina meandrites", "Pseudodiploria strigosa", "Pseudodiploria clivosa"),
                            "FLK" = c("Colpophyllia natans", "Montastraea cavernosa", "Orbicella faveolata", "Porites astreoides", "Siderastrea siderea", "Solenastrea bournoni"),
                            "Tortugas" = c("Colpophyllia natans", "Montastraea cavernosa", "Orbicella faveolata", "Porites astreoides", "Orbicella franksi", "Stephanocoenia intersepta"),
                            "SEFCRI" = c("Acropora cervicornis", "Dichocoenia stokesii", "Montastraea cavernosa", "Porites astreoide", "Pseudodiploria strigosa", "Siderastrea siderea"),
                            "FGB" = c(      "Montastraea cavernosa",
      "Orbicella faveolata",
      "Orbicella franksi",
      "Siderastrea siderea",
      "Stephanocoenia intersepta",
      "Porites porites",
      "Agaricia agaricites",
      "Colpophyllia natans",
      'Mussa angulosa',
      "Agaricia fragilis",
      "Madracis auretenra",
      "Pseudodiploria strigosa",
      "Orbicella annularis",
      "Agaricia humilis",
      "Scolymia cubensis",
      "Agaricia lamarcki",
      "Tubastraea coccinea",
      "Madracis decactis",
      "Porites astreoides"),
                            stop("Unknown region")  #Region NOT Found
    )

  samp_year = 2024
 
  if(region == "FGB") {sppdens <- NCRMP_FGBNMS_2013_24_density_species }

region_means <- NCRMP_make_weighted_density_CV_data(region = region, 
                                                        sppdens = sppdens,
                                                        project = "NCRMP")

print(region_means)
  if (species_filter == TRUE) {
    region_means <- region_means %>% dplyr::filter(SPECIES_CD %in% 
                                                     coral_species)
  }

print(region_means)
    g.mid <- region_means %>% dplyr::filter(occurrence > 
                                              0.01, YEAR >= 2024) %>% 
      #dplyr::filter(CV <= 1) %>% 
        # Add an asterisk to the label if allocation_species is "Y" and set font face
  dplyr::mutate(
    Label = ifelse(allocation_species == "Y", paste(SPECIES_CD, "*"), SPECIES_CD),
    FontFace = ifelse(SPECIES_CD %in% c("Acropora cervicornis", "Acropora palmata", "Dendrogyra cylindrus", 
                                        "Orbicella annularis", "Orbicella faveolata", "Orbicella franksi", 
                                        "Mycetophyllia ferox"), "bold.italic", "italic")
  ) %>%
      ggplot(., aes(x = 1, y = reorder(SPECIES_CD, occurrence))) + 
      #geom_text(aes(label = SPECIES_CD), size = 5, fontface = "italic") + 
       geom_text(aes(label = Label, fontface = FontFace), size = 5) +
       geom_segment(aes(x = 0.94, xend = 0.96, yend = SPECIES_CD)) +
      geom_segment(aes(x = 1.04, xend = 1.065, yend = SPECIES_CD)) +
      ggtitle(ptitle) +
      ylab(NULL) + 
      scale_x_continuous(expand = c(0,0), limits = c(0.94, 1.065)) +
      theme(axis.title = element_blank(), 
            panel.grid = element_blank(),
            axis.text.y = element_blank(), 
            axis.ticks.y = element_blank(),
            panel.background = element_blank(), 
            axis.text.x = element_text(color = NA),
            axis.ticks.x = element_line(color = NA), 
            plot.margin = unit(c(t = 1, r = -1, b = 1, l = 1), "mm"),
            #plot.margin = unit(c(t = 1, r = 1, b = 1, l = 1), "cm"), # Ensure consistent margin
            plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
    
g1 <- region_means %>% dplyr::filter(occurrence > 0.01,
                                     YEAR >= samp_year) %>%
  ggplot(., aes(x = reorder(SPECIES_CD, occurrence), y = occurrence,
                fill = "even")) +
  geom_bar(stat = "identity", fill = "deepskyblue4") +
  ggtitle(paste("Species", "occurrence", sep = " ")) +
  theme_light() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 12, face = 'bold'),
        axis.ticks.y = element_blank(),
        plot.margin = unit(c(t = 1, r = 3, b = 1, l = 3), "mm"),
        plot.title = element_text(hjust = 0.5, size = 12, face = "bold")) +
  scale_y_continuous(
    expand = c(0, 0),
    limits = c(0, 1.00),              # Set the y-axis limits from 0 to 1
    breaks = seq(0, 1.00, by = 0.25),  # Set the breaks to 0, 0.25, 0.50, 0.75, 1.00
    labels = c("0", "0.25", "0.50", "0.75", "1.00")  # Set the corresponding labels
  ) +
  #scale_x_discrete(labels = function(x) gsub("0.0", "0", x)) +
  coord_flip() +
  scale_y_reverse(expand = c(0, 0.01)) +
  guides(fill = "none") +
  # Custom 1.00 label at the bottom left
  annotate("text", x = 1, y = 1, label = "1.00", size = 5, fontface = "bold", color="NA") #Adding this transparent label made the 1.00 in the bottom left show up for some reason!!!

 
    g2 <- region_means %>% dplyr::filter(occurrence > 0.01, 
                                         YEAR >= samp_year) %>% 
      #dplyr::filter(CV <= 1) %>%
      ggplot(data = ., aes(x = reorder(SPECIES_CD, occurrence), y = CV*100, fill = "even")) +
      xlab(NULL) + 
      geom_bar(stat = "identity", fill = "deepskyblue4") +
      ggtitle("Coefficient of Variation (CV) of density") + 
      theme_light() +
      #scale_y_continuous(expand = c(0, 1.1), limits = c(0, 101))+
      scale_y_continuous(expand = c(0, 0), limits = c(0, 100.5))+
      theme(axis.title.x = element_blank(),
            axis.title.y = element_blank(), 
            axis.text.y = element_blank(),
            axis.text.x = element_text(size = 12, face = 'bold'),
            axis.ticks.y = element_blank(), 
            plot.margin = unit(c(t = 1, r = 4, b = 1, l = 2), "mm"),
            #plot.margin = unit(c(t = 1, r = 1, b = 1, l = 1), "cm"), # Ensure consistent margin
            plot.title = element_text(hjust = 0.5, size = 12, face = "bold")) +
            geom_hline(yintercept= 20, linetype="dashed") +
      coord_flip() + 
      guides(fill = "none")
  
  return(cowplot::plot_grid(g1, g.mid, g2, ncol = 3))
}



```
```{r}

```


```{r}

```

```{r}
obj <- NCRMP_DRM_colony_density_CV_and_occurrence(region = "FGB", ptitle = "Flower Garden Banks", year = 2024, species_filter = "TRUE", project = "NCRMP")


print(obj)
```


```{r}

spp1 <- "MON CAVE"
tmp <- NCRMP_make_size_bins(region = "PRICO" , project = "NCRMP", years = c(2014, 2019, 2023),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 
years =c(2014, 2019, 2023)
domain_estimates = tmp$length_freq_domain_est %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
demos = tmp$length_demos %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
domain_mort = tmp$domain_mort_spp
name = "Length (cm)"
domain_sub = subset(domain_estimates, SPECIES_CD == spp1)
demos_sub = subset(demos, SPECIES_CD == spp1)
mort_sub = domain_mort %>% dplyr::filter(SPECIES_CD == spp1)
domain_sub <-  domain_sub %>%
  # add 0s in for species not observed
  tidyr::expand(., REGION, SPECIES_NAME, SPECIES_CD, YEAR, bin_num) %>%
  filter(YEAR %in% years) %>% #Filter back to years analyzed only
  # connect back to demo_data to fill in with NAs
  dplyr::full_join(., domain_sub,
                   by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num")) %>%
  # make a presence/absence column
  dplyr::mutate(length_freq_domain = ifelse(is.na(length_freq_domain), 0, length_freq_domain)) %>% 
  # add in mortality data
  dplyr::full_join(., mort_sub, by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num", "bin_name", "n_strat"))
n_bins = max(demos_sub$n_bins)
text_size = 14
#angle = dplyr::if_else(n_bins > 6 | y == "size", 45, 0)
angle = 45
hjust = dplyr::if_else(angle == 45, 1, 0.5)
min = min(demos_sub$min)
bin_width = min(demos_sub$bin_width)
small = dplyr::if_else(n_bins > 4, 0, 1)
num_vec = seq_len(max(domain_sub$bin_num))
lab_vec <- c("4- 10", " 11-15", " 16-20", " 21-25", " 26-30", " 31-35", " 36-45", " 46-65", " 66-85", " 86-105", "106+")
p1 <- ggplot(data = domain_sub, 
             aes(x = as.integer(bin_num),
                 y = length_freq_domain, fill = YEAR)) + 
  geom_point(aes(x = as.integer(bin_num), 
              y = oldmort_domain, color = YEAR), size = 1) + 
  geom_bar(stat = "identity", position = "dodge2", width = .9, color = "black", size = .5) + 
  # Remove CI by setting se = FALSE
  geom_line(aes(x = as.integer(bin_num), 
                  y = oldmort_domain, color = YEAR), 
              size = 1)+   # This removes the confidence interval
  theme_Publication(base_size = 20) + 
  labs(y = "Frequency (Size Class & Mortality)", x = "Length (cm)") + 
  scale_x_continuous(
    breaks = seq_along(lab_vec),
    labels = lab_vec) + 
  scale_y_continuous(expand = c(0, 0), 
                     limits = c(0, 0.5)) + 
  theme(axis.text.x = element_text(size = text_size, angle = angle, 
                                   hjust = hjust), 
        legend.position = "none", 
        plot.margin = unit(c(t = 1, r = 2, b = -2, l = 0), "mm"), 
        strip.text = element_text(face = "italic")) + 
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) + 
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

# Print the plot
print(p1)

```

```{r}

spp1 <- "MON CAVE"
tmp <- NCRMP_make_size_bins(region = "PRICO" , project = "NCRMP", years = c(2014, 2019, 2023),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 
years =c(2014, 2019, 2023)
domain_estimates = tmp$length_freq_domain_est %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
demos = tmp$length_demos %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
domain_mort = tmp$domain_mort_spp
name = "Length (cm)"
domain_sub = subset(domain_estimates, SPECIES_CD == spp1)
demos_sub = subset(demos, SPECIES_CD == spp1)
mort_sub = domain_mort %>% dplyr::filter(SPECIES_CD == spp1)
domain_sub <-  domain_sub %>%

  tidyr::expand(., REGION, SPECIES_NAME, SPECIES_CD, YEAR, bin_num) %>%
  filter(YEAR %in% years) %>% #Filter back to years analyzed only
  # connect back to demo_data to fill in with NAs
  dplyr::full_join(., domain_sub,
                   by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num")) %>%
  # make a presence/absence column
  dplyr::mutate(length_freq_domain = ifelse(is.na(length_freq_domain), 0, length_freq_domain)) %>% 
  # add in mortality data
  dplyr::full_join(., mort_sub, by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num", "bin_name", "n_strat"))
n_bins = max(demos_sub$n_bins)
text_size = 14
#angle = dplyr::if_else(n_bins > 6 | y == "size", 45, 0)
angle = 45
hjust = dplyr::if_else(angle == 45, 1, 0.5)
min = min(demos_sub$min)
bin_width = min(demos_sub$bin_width)
small = dplyr::if_else(n_bins > 4, 0, 1)
num_vec = seq_len(max(domain_sub$bin_num))
lab_vec <- c("4- 10", " 11-15", " 16-20", " 21-25", " 26-30", " 31-35", " 36-45", " 46-65", " 66-85", " 86-105", "106+")
p_small_multiples <- ggplot(data = domain_sub, aes(x = as.factor(bin_num), color = YEAR)) + 
  geom_col(aes(y = length_freq_domain, fill = YEAR)) + 
  geom_line(aes(y = oldmort_domain * max(domain_sub$length_freq_domain)), size = 1) + 
  scale_y_continuous(
    name = "Frequency",
    sec.axis = sec_axis(~ . / max(domain_sub$length_freq_domain), name = "Mortality")
  ) + 
  theme_Publication(base_size = 20) +  
  scale_x_discrete(
    breaks = seq_along(lab_vec),
    labels = lab_vec
  ) +  
  theme(axis.text.x = element_text(size = text_size, angle = angle,  
                                   hjust = hjust),  
        legend.position = "none",  
        plot.margin = unit(c(t = 1, r = 2, b = -2, l = 0), "mm"),  
        strip.text = element_text(face = "italic")) +  
  labs(x = "Length (cm)") + 
  facet_wrap(~YEAR) +  
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +  
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601")) 

print(p_small_multiples)



```

```{r}

spp1 <- "ORB ANNU"
tmp <- NCRMP_make_size_bins(region = "PRICO" , project = "NCRMP", years = c(2014, 2019, 2023),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 
years =c(2014, 2019, 2023)
domain_estimates = tmp$length_freq_domain_est %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
demos = tmp$length_demos %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
domain_mort = tmp$domain_mort_spp
name = "Length (cm)"
domain_sub = subset(domain_estimates, SPECIES_CD == spp1)
demos_sub = subset(demos, SPECIES_CD == spp1)
mort_sub = domain_mort %>% dplyr::filter(SPECIES_CD == spp1)
domain_sub <-  domain_sub %>%
  # add 0s in for species not observed
  tidyr::expand(., REGION, SPECIES_NAME, SPECIES_CD, YEAR, bin_num) %>%
  filter(YEAR %in% years) %>% #Filter back to years analyzed only
  # connect back to demo_data to fill in with NAs
  dplyr::full_join(., domain_sub,
                   by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num")) %>%
  # make a presence/absence column
  dplyr::mutate(length_freq_domain = ifelse(is.na(length_freq_domain), 0, length_freq_domain)) %>% 
  # add in mortality data
  dplyr::full_join(., mort_sub, by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num", "bin_name", "n_strat"))
n_bins = max(demos_sub$n_bins)
text_size = 14
#angle = dplyr::if_else(n_bins > 6 | y == "size", 45, 0)
angle = 45
hjust = dplyr::if_else(angle == 45, 1, 0.5)
min = min(demos_sub$min)
bin_width = min(demos_sub$bin_width)
small = dplyr::if_else(n_bins > 4, 0, 1)
num_vec = seq_len(max(domain_sub$bin_num))
lab_vec <- c("4- 10", " 11-15", " 16-20", " 21-25", " 26-30", " 31-35", " 36-45", " 46-65", " 66-85", " 86-105", "106+")
p1 <- ggplot(data = domain_sub, 
             aes(x = as.integer(bin_num),
                 y = length_freq_domain, fill = YEAR)) + 
  #geom_point(aes(x = as.integer(bin_num), y = oldmort_domain, color = YEAR), size = 1) + 
  geom_bar(stat = "identity", position = "dodge2", width = .9, color = "black", size = .5) + 
  # Remove CI by setting se = FALSE
 # geom_smooth(aes(x = as.integer(bin_num), 
               #   y = oldmort_domain, color = YEAR), method = "gam", se = FALSE,
            #  size = 1)+   # This removes the confidence interval
stat_smooth(
  aes(x = as.integer(bin_num), y = oldmort_domain, color = YEAR),
  method = "lm",
  formula = y ~ bs(x, knots = c(3, 5, 7)),
  se = FALSE
) +
  theme_Publication(base_size = 20) + 
  labs(y = "Frequency (Size Class & Mortality)", x = "Length (cm)") + 
  scale_x_continuous(
    breaks = seq_along(lab_vec),
    labels = lab_vec) + 
  scale_y_continuous(expand = c(0, 0), 
                     limits = c(0, 0.5)) + 
  theme(axis.text.x = element_text(size = text_size, angle = angle, 
                                   hjust = hjust), 
        legend.position = "none", 
        plot.margin = unit(c(t = 1, r = 2, b = -2, l = 0), "mm"), 
        strip.text = element_text(face = "italic")) + 
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) + 
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

# Print the plot
print(p1)
```

```{r}

library(splines)
library(ggfortify)

my_data <- domain_sub %>%
  filter(YEAR == 2023)


# Fit a spline regression with 4 knots
model_spline <- loess(oldmort_domain ~ (bin_num), data = my_data, span = 0.25)



# Visualization
ggplot(my_data, aes(x = bin_num, y = oldmort_domain)) +
  geom_point(alpha = 0.6) +
  stat_smooth(method = "lm", formula = y ~ bs(x, knots = c(3, 5, 7)), color = "purple", se = FALSE) +
  theme_minimal()

autoplot(model_spline)

```

```{r}
data <- tmp$demos

data

spp1 <- "ORB FRAN"
tmp <- NCRMP_make_size_bins(region = "FGB" , project = "NCRMP", years = c(2013, 2018, 2024),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 

data <- tmp$demos %>%
  filter(SPECIES_CD == spp1) %>%
  mutate(YEAR = as.factor(YEAR))

plot<- data %>%
  filter(!is.na(YEAR)) %>%
  mutate(YEAR = as.factor(YEAR)) %>%  
  ggplot(aes(x = MAX_DIAMETER, group = YEAR, fill = YEAR, color = YEAR)) + 
  geom_density(adjust = 1.5, alpha = 0.4) + 
  theme_Publication(base_size = 20) + 
    ggtitle(unique(data$SPECIES_NAME))+
  xlab("Size")+
  theme(

    axis.text.x = element_text(size = text_size, angle = angle, hjust = hjust),
    axis.text.y = element_text(size = 16), 
    axis.title.x = element_text(size = 18), 
    axis.title.y = element_text(size = 18),  
    legend.position = "right",  
    plot.margin = unit(c(t = 1, r = 2, b = 2, l = 2), "mm"),  
    strip.text = element_text(face = "italic")
  ) + 
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) + 
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601")) 

print(plot)
  ggsave("density.png", plot = plot, width = 15, height = 8, dpi = 300)


```

```{r}

tmp <- NCRMP_make_size_bins(region = "PRICO" , project = "NCRMP", years = c(2014, 2019, 2023),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 

data <- tmp$demos %>%
  filter(SPECIES_CD == spp1) %>%
  filter(MAX_DIAMETER < 120)


plot<- data %>%
  filter(!is.na(YEAR)) %>%
  filter(MAX_DIAMETER > 3 & MAX_DIAMETER < 115) %>%
  mutate(YEAR = as.factor(YEAR)) %>%  
  ggplot(aes(x = MAX_DIAMETER, group = YEAR, fill = YEAR, color = YEAR)) + 
  geom_density(adjust = 1.5, alpha = 0.4) + 
  facet_wrap(~YEAR) +
  theme_Publication(base_size = 20) + 
  ggtitle(unique(data$SPECIES_NAME))+
  xlab("Size")+
  theme(
    axis.text.x = element_text(size = text_size, angle = angle, hjust = hjust),
    axis.text.y = element_text(size = 16), 
    axis.title.x = element_text(size = 18), 
    axis.title.y = element_text(size = 18),  
    legend.position = "right",  
    plot.margin = unit(c(t = 1, r = 2, b = 2, l = 2), "mm"),  
    strip.text = element_text(face = "italic")
  ) + 
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) + 
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

  ggsave("density.png", plot = plot, width = 15, height = 8, dpi = 300)

  print(plot)
  
  
```

```{r}



```

```{r}


```

```{r}
library(ggplot2)
library(dplyr)

spp1 <- "ORB FRAN"
tmp <- NCRMP_make_size_bins(region = "FGB" , project = "NCRMP", years = c(2013, 2018, 2024),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 

data <- tmp$demos %>%
  filter(SPECIES_CD == spp1) 

plot <- data %>%
  filter(!is.na(YEAR)) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  ggplot(aes(x = MAX_DIAMETER, group = YEAR, fill = YEAR, color = YEAR)) +
  geom_density(aes(y = after_stat(scaled)), adjust = 1, alpha = 0.4, size = 1) +
  theme_minimal(base_size = 18) +
  ggtitle(unique(data$SPECIES_NAME)) +
  xlab("Maximum Diameter (cm)") +
  ylab("Scaled Density") +
  theme(
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 16),
    legend.position = "right",
    plot.title = element_text(face = "bold")
  ) +
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

ggsave("density.png", plot = plot, width = 15, height = 8, dpi = 300)

print(plot)


```

```{r}
spp1 <- "ORB FRAN"
tmp <- NCRMP_make_size_bins(region = "FGB" , project = "NCRMP", years = c(2013, 2018, 2024),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 
plot <- data %>%
  filter(!is.na(YEAR)) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  ggplot(aes(x = MAX_DIAMETER, group = YEAR, fill = YEAR, color = YEAR)) +
  geom_density(aes(y = after_stat(count)), adjust = 1, alpha = 0.4, size = 1) + 
  theme_minimal(base_size = 18) +
  ggtitle(unique(data$SPECIES_NAME)) +
  xlab("Maximum Diameter (cm)") +
  ylab("Density (Weighted by Frequency)") + 
  theme(
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 16),
    legend.position = "right",
    plot.title = element_text(face = "bold")
  ) +
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

ggsave("density_weighted.png", plot = plot, width = 15, height = 8, dpi = 300)

print(plot)

```

```{r}
plot <- data %>%
  filter(!is.na(YEAR)) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  ggplot(aes(x = YEAR, y = MAX_DIAMETER, fill = YEAR)) +
  geom_violin(alpha = 0.4, scale = "count") +  
  theme_minimal(base_size = 18) +
  ggtitle(unique(data$SPECIES_NAME)) +
  xlab("Year") +
  ylab("Maximum Diameter (cm)") +
  theme(
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 16),
    legend.position = "right",
    plot.title = element_text(face = "bold")
  ) +
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601"))

ggsave("violin.png", plot = plot, width = 15, height = 8, dpi = 300)

print(plot)

```

```{r}

spp1 <- "DEN CYLI"
tmp <- NCRMP_make_size_bins(region = "PRICO" , project = "NCRMP", years = c(2016, 2019, 2023),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 
years =c(2017, 2019, 2023)
domain_estimates = tmp$length_freq_domain_est %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
demos = tmp$length_demos %>%
  dplyr::mutate(YEAR = as.factor(YEAR)) %>%
  dplyr::ungroup()
domain_mort = tmp$domain_mort_spp
name = "Length (cm)"
domain_sub = subset(domain_estimates, SPECIES_CD == spp1)
demos_sub = subset(demos, SPECIES_CD == spp1)
mort_sub = domain_mort %>% dplyr::filter(SPECIES_CD == spp1)
domain_sub <-  domain_sub %>%

  tidyr::expand(., REGION, SPECIES_NAME, SPECIES_CD, YEAR, bin_num) %>%
  filter(YEAR %in% years) %>% #Filter back to years analyzed only
  # connect back to demo_data to fill in with NAs
  dplyr::full_join(., domain_sub,
                   by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num")) %>%
  # make a presence/absence column
  dplyr::mutate(length_freq_domain = ifelse(is.na(length_freq_domain), 0, length_freq_domain)) %>% 
  # add in mortality data
  dplyr::full_join(., mort_sub, by = c('REGION', 'SPECIES_NAME',"SPECIES_CD", "YEAR", "bin_num", "bin_name", "n_strat"))
n_bins = max(demos_sub$n_bins)
text_size = 14
#angle = dplyr::if_else(n_bins > 6 | y == "size", 45, 0)
angle = 45
hjust = dplyr::if_else(angle == 45, 1, 0.5)
min = min(demos_sub$min)
bin_width = min(demos_sub$bin_width)
small = dplyr::if_else(n_bins > 4, 0, 1)
num_vec = seq_len(max(domain_sub$bin_num))
lab_vec <- c("4- 10", " 11-15", " 16-20", " 21-25", " 26-30", " 31-35", " 36-45", " 46-65", " 66-85", " 86-105", "106+")
p1 <- ggplot(data = domain_sub, 
             aes(x = as.integer(bin_num),
                 y = length_freq_domain, fill = YEAR)) + 
  #geom_point(aes(x = as.integer(bin_num), y = oldmort_domain, color = YEAR), size = 1) + 
  geom_bar(stat = "identity", position = "dodge2", width = .9, color = "black", size = .5) + 

    geom_line(aes(x = as.integer(bin_num), 
                  y = oldmort_domain, color = YEAR), 
              size = 1)+ 
  facet_wrap(~YEAR)+

  theme_Publication(base_size = 20) + 
  labs(y = "Frequency (Size Class & Mortality)", x = "Length (cm)") + 
  scale_x_continuous(
    breaks = seq_along(lab_vec),
    labels = lab_vec) + 
  scale_y_continuous(expand = c(0, 0), 
                     limits = c(0, 0.5)) + 
  theme(axis.text.x = element_text(size = text_size, angle = angle, 
                                   hjust = hjust), 
    axis.text.y = element_text(size = 15), 
    axis.title.x = element_text(size = 15), 
    axis.title.y = element_text(size = 15),  
        legend.position = "none", 
        plot.margin = unit(c(t = 1, r = 5, b = 2, l = 0), "mm"), 
        strip.text = element_text(face = "italic")) + 

  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) + 
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))


print(p1)

  ggsave("facet.png", plot = p1, width = 15, height = 8, dpi = 300)

```

```{r}


data <- tmp$demos

data

spp1 <- "DEN CYLI"
tmp <- NCRMP_make_size_bins(region = "STTSTJ" , project = "NCRMP", years = c(2014, 2019, 2023),
                                      size_bin_count = 10, length_bin_count = 10,
                                      species_filter = spp1) 

data <- tmp$demos %>%
  filter(SPECIES_CD == spp1)




plot <- data %>%
  filter(!is.na(YEAR)) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  ggplot(aes(x = MAX_DIAMETER, group = YEAR, fill = YEAR, color = YEAR)) +
  geom_density(aes(y = after_stat(density) / max(after_stat(density))), 
               adjust = 1.5, alpha = 0.4) +  # Normalize within each group
  theme_Publication(base_size = 20) +
  ggtitle(unique(data$SPECIES_NAME)) +
  xlab("Size") +
  ylab("Density")
  theme(
    axis.text.x = element_text(size = text_size, angle = angle, hjust = hjust),
    axis.text.y = element_text(size = 16),
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    legend.position = "right",
    plot.margin = unit(c(t = 1, r = 2, b = 2, l = 2), "mm"),
    strip.text = element_text(face = "italic")
  ) +
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

ggsave("density.png", plot = plot, width = 15, height = 8, dpi = 300)


  ggsave("density.png", plot = plot, width = 15, height = 8, dpi = 300)
print(plot)

```

```{r}


```

```{r}

data_density <- data %>%
  filter(!is.na(YEAR), !is.na(MAX_DIAMETER)) %>%
  mutate(YEAR = as.factor(YEAR)) %>%
  group_by(YEAR) %>%
  do({
    dens <- density(.$MAX_DIAMETER)
    data.frame(x = dens$x, y = dens$y / sum(dens$y)) 
  }) %>%
  ungroup()

plot <- ggplot(data_density, aes(x = x, y = y, group = YEAR, fill = YEAR, color = YEAR)) +
  geom_line() + 

  theme_minimal(base_size = 20) + 
  ggtitle(unique(data$SPECIES_NAME)) + 
  xlab("Size") + 
  theme(
    axis.text.x = element_text(size = 16, angle = 45, hjust = 1),  
    axis.text.y = element_text(size = 16), 
    axis.title.x = element_text(size = 18), 
    axis.title.y = element_text(size = 18), 
    legend.position = "right", 
    plot.margin = unit(c(t = 1, r = 2, b = 2, l = 2), "mm"), 
    strip.text = element_text(face = "italic")
  ) +
  scale_fill_manual(values = c("#53868a", "#00cd65", "#ffd601")) +
  scale_color_manual(values = c("#53868a", "#00cd65", "#ffd601"))

ggsave("density_plot.png", plot = plot, width = 15, height = 8, dpi = 300)

 print(plot)
```




```{r}
print(plot)
library(patchwork)
print(plt)
combo <- plot + plt + 
  plot_annotation(
    title = "Flower Garden Banks", 
    subtitle = "Colpophyllia natans", 
    theme = theme(
      plot.title = element_text(size = 24, face = "bold", hjust = 0.5),
      plot.subtitle = element_text(size = 20, face = "bold.italic", hjust = 0.5)
    )
  )

print(combo)

  
```
